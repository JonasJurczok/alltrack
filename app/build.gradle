apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'spoon'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "org.linesofcode.alltrack"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs{
        release{
            storeFile file('~/android-release.keystore')
            keyAlias 'android'
            //storePassword System.console().readLine("\nKeystore password: ")
            //keyPassword System.console().readLine("\nKey password: ")
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        showStandardStreams = true
    }
}

dependencies {
    compile "com.android.support:appcompat-v7:23.0.1"
    compile "com.android.support:design:23.0.1"
    compile "com.android.support:recyclerview-v7:23.0.1"

    compile "com.j256.ormlite:ormlite-core:4.41"
    compile "com.j256.ormlite:ormlite-android:4.41"

    compile 'com.google.dagger:dagger:2.0.2'
    apt 'com.google.dagger:dagger-compiler:2.0.2'
    provided 'javax.annotation:jsr250-api:1.0'

    compile 'com.github.PhilJay:MPAndroidChart:v2.1.6'
    compile 'com.github.citux:datetimepicker:0.2.0'

    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test:runner:0.4') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:rules:0.4') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile 'com.squareup.spoon:spoon-client:1.3.1'
}

coveralls {
    jacocoReportPath = 'build/reports/coverage/debug/report.xml'
}

spoon {
    adbTimeout=60
    debug=true
}

task grantAnimationPermission(type: Exec, dependsOn: 'installDebug') {
    commandLine "./adb_all.sh shell pm grant org.linesofcode.alltrack android.permission.SET_ANIMATION_SCALE".split(' ')
}

task grantWritePermission(type: Exec, dependsOn: 'installDebug') {
    commandLine "./adb_all.sh shell pm grant org.linesofcode.alltrack android.permission.WRITE_EXTERNAL_STORAGE".split(' ')
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('connected') || task.name.startsWith('spoon')) {
        task.dependsOn grantAnimationPermission, grantWritePermission
    }
}